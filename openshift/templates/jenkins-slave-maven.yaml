apiVersion: v1
kind: Template
labels:
  template: jenkins-slave-maven-template
message: |-
  A Jenkins server must be instantiated in this project to manage
  the Pipeline BuildConfig created by this template. You will be able to log in to
  it using your OpenShift user credentials.
metadata:
  annotations:
    openshift.io/display-name: maven jenkins slave template
    description: |-
      This is a template for maven jenkins slave.
    iconClass: icon-jenkins
    tags: instant-app,jenkins
  name: jenkins-slave-maven-template
parameters:
  - description: The OpenShift Namespace prefix where the ImageStreams reside.
    displayName: Namespace Prefix (Prefix for each namespace ie prefix-tools, prefix-dev etc)
    name: namespacePrefix
    required: true
    value:
objects:
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        app: jenkins-slave-maven
      name: jenkins-slave-maven
    spec:
      tags:
        - annotations:
            description: The jenkins slave maven image
            tags: jenkins-slave-maven
          from:
            kind: DockerImage
            name: "registry.access.redhat.com/openshift3/jenkins-agent-maven-35-rhel7:v3.11"
          importPolicy: {}
          name: "latest"
  - apiVersion: v1
    data:
      maven35: |-
        <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
          <inheritFrom></inheritFrom>
          <name>maven35</name>
          <instanceCap>2147483647</instanceCap>
          <idleMinutes>0</idleMinutes>
          <label>maven35</label>
          <serviceAccount>jenkins</serviceAccount>
          <nodeSelector></nodeSelector>
          <volumes/>
          <containers>
            <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              <name>jnlp</name>
              <image>docker-registry.default.svc:5000/${namespacePrefix}-tools/jenkins-slave-maven</image>
              <privileged>false</privileged>
              <alwaysPullImage>false</alwaysPullImage>
              <workingDir>/tmp</workingDir>
              <command></command>
              <args>${computer.jnlpmac} ${computer.name}</args>
              <ttyEnabled>false</ttyEnabled>
              <resourceRequestCpu>1</resourceRequestCpu>
              <resourceRequestMemory>1Gi</resourceRequestMemory>
              <resourceLimitCpu>2</resourceLimitCpu>
              <resourceLimitMemory>4Gi</resourceLimitMemory>
              <envVars/>
            </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
          </containers>
          <envVars/>
          <annotations/>
          <imagePullSecrets/>
          <nodeProperties/>
        </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
    kind: ConfigMap
    metadata:
      labels:
        role: jenkins-slave
      name: jenkins-agent-maven
